#!/bin/bash
source "include/cmd.bash"
source "include/fn.bash"
source "include/utils.bash"
source "include/commands/env.bash"
source "include/commands/service.bash"
source "include/commands/build.bash"
source "include/commands/run.bash"
source "include/commands/pg.bash"

if [[ "$BASH_VERSINFO" -lt "4" ]]; then
	echo "!! Your system Bash is out of date: $BASH_VERSION"
	echo "!! Please upgrade to Bash 4 or greater."
	exit 2
fi


readonly identifier="devoku"
readonly buildpack_path="${DEVOKU_BUILDPACK_PATH}"

readonly port=8000

readonly local_share_dir="${DEVOKU_SHARE_DIR:-$PWD}"
readonly local_prefix="${DEVOKU_LOCAL_PREFIX:-/home/$USER/$identifier}"
readonly container_prefix="/$identifier"

readonly local_app_dir="$local_prefix/app"
readonly local_cache_dir="$local_prefix/cache"
readonly local_slug_file="$local_prefix/slug.tar.gz"
readonly local_env_file="$local_prefix/.env"
readonly container_slug_file="$container_prefix/slug.tar.gz"
readonly container_env_file="$container_prefix/.env"
readonly container_share_dir="$container_prefix/share"

readonly postgres_image="${ODOOKU_POSTGRES_IMAGE:-postgres:9.5}"
readonly redis_image="${ODOOKU_POSTGRES_IMAGE:-redis:latest}"
readonly fake_s3_image="${ODOOKU_POSTGRES_IMAGE:-lphoward/fake-s3:latest}"


readonly run_init="\
/app/.heroku/odoo/bin/pip install --disable-pip-version-check --upgrade -e $container_share_dir/runtime/. &>/dev/null \
;cp -a $container_share_dir/addons/. /app/.heroku/odoo/compat_addons/ \
;cp -a $container_share_dir/patch/addons/. /app/.heroku/odoo/addons/ \
;cp -a $container_share_dir/patch/openerp/. /app/.heroku/odoo/lib/python2.7/site-packages/openerp/ \
;source $container_env_file"

readonly run_args="\
--net host \
-v $local_share_dir:$container_share_dir \
-v $local_env_file:$container_env_file \
-e PORT=$port \
$identifier/$identifier:latest"


ensure-dirs() {
  mkdir -p $local_prefix $local_app_dir $local_cache_dir
}

remove-dirs() {
	rm -rf $local_app_dir $local_cache_dir
}

info() {
	title "info"
	echo "app repository: $local_app_dir" | indent
	echo "build cache: $local_cache_dir" | indent
	echo "env file: $local_env_file" | indent
}

main() {
	set -eo pipefail; [[ "$TRACE" ]] && set -x

	cmd-export info
	cmd-export build
	cmd-export clean

	cmd-export-ns env "Manage Herokuish environment"
	cmd-export env-new
	cmd-export env-set
	cmd-export env-print

	cmd-export-ns run "Run Herokuish container"
	cmd-export run-web
	cmd-export run-worker
	cmd-export run-exec
	cmd-export run-shell

	cmd-export-ns pg "Manage PostgreSQL"
	cmd-export pg-psql
	cmd-export pg-createdb
	cmd-export pg-dropdb

	cmd-export-ns service
	cmd-export-ns service-postgres
	cmd-export-ns service-redis
	cmd-export-ns service-s3
	cmd-export service-postgres-up
	cmd-export service-postgres-down
	cmd-export service-redis-up
	cmd-export service-redis-down
	cmd-export service-s3-up
	cmd-export service-s3-down


	case "$1" in
		exec)		run-exec "${@:2}";;
		shell)		run-shell "${@:2}";;
		web)		run-web "${@:2}";;
		worker)		run-worker "${@:2}";;
		*)			cmd-ns "" "$@";
	esac
}

main "$@"
